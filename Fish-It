-- Fish It! Advanced Webhook System
-- Loader Script Compatible with Delta Executor
-- Format: loadstring(game:HttpGet("YOUR_RAW_GITHUB_URL"))()

local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local StarterGui = game:GetService("StarterGui")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Check if script already running
if playerGui:FindFirstChild("FishItWebhookSystem") then
    playerGui.FishItWebhookSystem:Destroy()
end

-- Version info
local SCRIPT_VERSION = "v2.1.0"
local GAME_SUPPORT = {
    [121864768012064] = "Fish It! (Supported)",
    ["Universal"] = "All Fishing Games"
}

-- Enhanced Configuration System
local CONFIG = {
    -- Webhook Settings
    WEBHOOK_URL = "",
    BACKUP_WEBHOOK = "",
    
    -- Feature Toggles
    AUTO_DETECTION = true,
    MANUAL_WEBHOOK = true,
    SHOW_GUI = true,
    SOUND_ENABLED = true,
    NOTIFICATIONS = true,
    
    -- Filters
    RARE_FISH_ONLY = false,
    SECRET_FISH_ONLY = false,
    MIN_VALUE_FILTER = 0,
    
    -- Visual Settings
    THEME = "Ocean", -- Ocean, Dark, Neon, Rainbow
    ANIMATIONS = true,
    PARTICLES = true,
    TRANSPARENCY = 0.1,
    
    -- Performance
    UPDATE_INTERVAL = 1,
    MAX_HISTORY = 100,
    AUTO_CLEANUP = true
}

-- Theme System
local THEMES = {
    Ocean = {
        primary = Color3.fromRGB(20, 40, 70),
        secondary = Color3.fromRGB(25, 50, 85),
        accent = Color3.fromRGB(100, 200, 255),
        text = Color3.fromRGB(255, 255, 255),
        success = Color3.fromRGB(80, 255, 120),
        error = Color3.fromRGB(255, 100, 100)
    },
    Dark = {
        primary = Color3.fromRGB(25, 25, 35),
        secondary = Color3.fromRGB(35, 35, 50),
        accent = Color3.fromRGB(138, 43, 226),
        text = Color3.fromRGB(255, 255, 255),
        success = Color3.fromRGB(76, 175, 80),
        error = Color3.fromRGB(244, 67, 54)
    },
    Neon = {
        primary = Color3.fromRGB(10, 10, 20),
        secondary = Color3.fromRGB(20, 20, 40),
        accent = Color3.fromRGB(0, 255, 255),
        text = Color3.fromRGB(0, 255, 255),
        success = Color3.fromRGB(57, 255, 20),
        error = Color3.fromRGB(255, 20, 147)
    },
    Rainbow = {
        primary = Color3.fromRGB(30, 30, 60),
        secondary = Color3.fromRGB(50, 30, 80),
        accent = Color3.fromRGB(255, 0, 127),
        text = Color3.fromRGB(255, 255, 255),
        success = Color3.fromRGB(127, 255, 0),
        error = Color3.fromRGB(255, 69, 0)
    }
}

-- Fish Database for Fish It! (Expanded)
local FISH_DATABASE = {
    Common = {
        "Bass", "Trout", "Salmon", "Tuna", "Cod", "Anchovy", "Sardine", "Mackerel",
        "Herring", "Carp", "Pike", "Perch", "Catfish", "Flounder", "Sole", "Minnow",
        "Bluegill", "Sunfish", "Crappie", "Walleye"
    },
    Uncommon = {
        "Large Bass", "Rainbow Trout", "King Salmon", "Yellow Tuna", "Silver Cod",
        "Golden Anchovy", "Giant Sardine", "Blue Mackerel", "Red Herring", "Mirror Carp"
    },
    Rare = {
        "Golden Bass", "Diamond Trout", "Crystal Salmon", "Neon Tuna", "Ice Cod",
        "Lightning Pike", "Thunder Perch", "Fire Catfish", "Glowing Flounder", "Mystic Carp"
    },
    Epic = {
        "Epic Shark", "Storm Bass", "Phoenix Salmon", "Dragon Tuna", "Frost Giant Cod",
        "Electric Pike", "Plasma Perch", "Lava Catfish", "Celestial Flounder", "Ancient Carp"
    },
    Legendary = {
        "Legendary Shark", "Titan Bass", "Cosmic Salmon", "Void Tuna", "Eternal Cod",
        "Divine Pike", "Sacred Perch", "Infernal Catfish", "Astral Flounder", "Primordial Carp"
    },
    Mythic = {
        "Megalodon", "Monster Shark", "Great White", "Hammerhead King", "Tiger Shark Lord",
        "Bull Shark Emperor", "Mako Shark God", "Reef Shark Titan", "Angel Shark Divine"
    },
    Secret = {
        "Eerie Shark", "Ghost Fish", "Shadow Leviathan", "Void Kraken", "Spectral Dragon",
        "Phantom King", "Dark Abyss Lord", "Cursed Terror", "Nightmare Behemoth", "Soul Eater"
    }
}

-- Stats tracking
local STATS = {
    totalCaught = 0,
    webhooksSent = 0,
    webhooksSuccessful = 0,
    webhooksFailed = 0,
    sessionStartTime = tick(),
    lastCatch = nil,
    fishByRarity = {},
    history = {}
}

-- Initialize stats
for rarity, _ in pairs(FISH_DATABASE) do
    STATS.fishByRarity[rarity] = 0
end

-- Utility Functions
local function playSound(soundId)
    if not CONFIG.SOUND_ENABLED then return end
    pcall(function()
        local sound = Instance.new("Sound")
        sound.SoundId = "rbxasset://sounds/electronicpingshort.wav"
        sound.Volume = 0.3
        sound.Parent = workspace
        sound:Play()
        game:GetService("Debris"):AddItem(sound, 2)
    end)
end

local function formatNumber(num)
    if num >= 1000000 then
        return string.format("%.1fM", num / 1000000)
    elseif num >= 1000 then
        return string.format("%.1fK", num / 1000)
    else
        return tostring(num)
    end
end

local function getTimestamp()
    return os.date("%H:%M:%S - %d/%m/%Y")
end

local function getRarityFromName(fishName)
    fishName = fishName:lower()
    
    -- Check each rarity category
    for rarity, fishList in pairs(FISH_DATABASE) do
        for _, fish in ipairs(fishList) do
            if fishName:find(fish:lower()) then
                return rarity
            end
        end
    end
    
    -- Special checks for common Fish It! patterns
    if fishName:find("shark") then return "Mythic" end
    if fishName:find("golden") or fishName:find("diamond") then return "Rare" end
    if fishName:find("legendary") then return "Legendary" end
    if fishName:find("epic") then return "Epic" end
    if fishName:find("mythic") or fishName:find("secret") then return "Secret" end
    
    return "Common"
end

local function createParticleEffect(parent, color, count)
    if not CONFIG.PARTICLES then return end
    
    count = count or 10
    for i = 1, count do
        local particle = Instance.new("Frame")
        particle.Name = "Particle"
        particle.Size = UDim2.new(0, math.random(2, 6), 0, math.random(2, 6))
        particle.Position = UDim2.new(
            math.random(0, 100) / 100, 0,
            math.random(0, 100) / 100, 0
        )
        particle.BackgroundColor3 = color
        particle.BorderSizePixel = 0
        particle.ZIndex = 1000
        particle.Parent = parent
        
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(1, 0)
        corner.Parent = particle
        
        -- Animate particle
        local tween = TweenService:Create(particle, 
            TweenInfo.new(math.random(10, 20) / 10, Enum.EasingStyle.Quad), {
            Position = UDim2.new(
                math.random(-50, 150) / 100, 0,
                math.random(-50, 150) / 100, 0
            ),
            BackgroundTransparency = 1,
            Size = UDim2.new(0, 1, 0, 1)
        })
        
        tween:Play()
        tween.Completed:Connect(function()
            particle:Destroy()
        end)
    end
end

-- Enhanced Webhook System
local function sendWebhook(fishData)
    if not CONFIG.WEBHOOK_URL or CONFIG.WEBHOOK_URL == "" then
        if CONFIG.NOTIFICATIONS then
            StarterGui:SetCore("SendNotification", {
                Title = "‚ùå Webhook Error";
                Text = "Webhook URL tidak diatur!";
                Duration = 5;
            })
        end
        return false
    end
    
    local theme = THEMES[CONFIG.THEME] or THEMES.Ocean
    local rarityColors = {
        Common = 7506394,      -- Light Blue
        Uncommon = 5763719,    -- Green
        Rare = 15844367,       -- Gold
        Epic = 10181046,       -- Purple
        Legendary = 15105570,  -- Orange
        Mythic = 16711680,     -- Red
        Secret = 65535         -- Cyan
    }
    
    local rarityEmojis = {
        Common = "üêü",
        Uncommon = "üé£",
        Rare = "‚ú®",
        Epic = "üåü",
        Legendary = "üèÜ",
        Mythic = "üî•",
        Secret = "üëª"
    }
    
    local embed = {
        title = string.format("%s Fish Caught in Fish It! %s", 
            rarityEmojis[fishData.rarity] or "üêü", 
            rarityEmojis[fishData.rarity] or "üêü"
        ),
        description = string.format("**%s** caught a **%s %s**! üé£", 
            player.Name, 
            fishData.rarity,
            fishData.name
        ),
        color = rarityColors[fishData.rarity] or rarityColors.Common,
        fields = {
            {
                name = "üêü Fish Details",
                value = string.format("**Name:** %s\n**Rarity:** %s", 
                    fishData.name, fishData.rarity),
                inline = true
            },
            {
                name = "üìä Catch Info",
                value = string.format("**Location:** %s\n**Value:** %s coins", 
                    fishData.location or "Unknown", 
                    formatNumber(fishData.value or 0)),
                inline = true
            },
            {
                name = "üìà Session Stats",
                value = string.format("**Total:** %d fish\n**Webhooks:** %d sent", 
                    STATS.totalCaught, 
                    STATS.webhooksSent + 1),
                inline = true
            },
            {
                name = "‚è∞ Timestamp",
                value = fishData.timestamp,
                inline = false
            }
        },
        footer = {
            text = string.format("Fish It! Webhook %s ‚Ä¢ Delta Compatible", SCRIPT_VERSION),
            icon_url = "https://cdn.discordapp.com/emojis/üêü.png"
        },
        timestamp = os.date("!%Y-%m-%dT%H:%M:%S.000Z")
    }
    
    -- Special formatting for rare catches
    if fishData.rarity == "Mythic" or fishData.rarity == "Secret" or fishData.rarity == "Legendary" then
        embed.title = "üö® RARE FISH ALERT! üö®"
        embed.description = string.format("**%s** caught an **EXTREMELY RARE** %s! üåü\n\n**%s**", 
            player.Name, 
            fishData.rarity:upper(),
            fishData.name:upper()
        )
    end
    
    local data = {
        username = "Fish It! Advanced Bot",
        avatar_url = "https://cdn.roblox.com/asset-thumbnails/121864768012064.png",
        embeds = {embed}
    }
    
    -- Try primary webhook first
    local success, response = pcall(function()
        return HttpService:PostAsync(CONFIG.WEBHOOK_URL, HttpService:JSONEncode(data), Enum.HttpContentType.ApplicationJson)
    end)
    
    -- Try backup webhook if primary fails
    if not success and CONFIG.BACKUP_WEBHOOK and CONFIG.BACKUP_WEBHOOK ~= "" then
        success, response = pcall(function()
            return HttpService:PostAsync(CONFIG.BACKUP_WEBHOOK, HttpService:JSONEncode(data), Enum.HttpContentType.ApplicationJson)
        end)
    end
    
    -- Update stats
    STATS.webhooksSent = STATS.webhooksSent + 1
    if success then
        STATS.webhooksSuccessful = STATS.webhooksSuccessful + 1
        
        if CONFIG.NOTIFICATIONS then
            StarterGui:SetCore("SendNotification", {
                Title = "‚úÖ Webhook Sent!";
                Text = string.format("%s (%s)", fishData.name, fishData.rarity);
                Duration = 3;
            })
        end
        
        playSound("success")
    else
        STATS.webhooksFailed = STATS.webhooksFailed + 1
        
        if CONFIG.NOTIFICATIONS then
            StarterGui:SetCore("SendNotification", {
                Title = "‚ùå Webhook Failed";
                Text = "Check your webhook URL!";
                Duration = 5;
            })
        end
    end
    
    -- Add to history
    table.insert(STATS.history, 1, {
        fish = fishData.name,
        rarity = fishData.rarity,
        timestamp = fishData.timestamp,
        success = success,
        value = fishData.value
    })
    
    -- Limit history size
    while #STATS.history > CONFIG.MAX_HISTORY do
        table.remove(STATS.history, #STATS.history)
    end
    
    return success
end

-- Create Modern GUI System
local function createMainGUI()
    local theme = THEMES[CONFIG.THEME] or THEMES.Ocean
    
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "FishItWebhookSystem"
    screenGui.Parent = playerGui
    screenGui.ResetOnSpawn = false
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    -- Main Frame with advanced styling
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Size = UDim2.new(0, 450, 0, 600)
    mainFrame.Position = UDim2.new(0.5, -225, 0.5, -300)
    mainFrame.BackgroundColor3 = theme.primary
    mainFrame.BackgroundTransparency = CONFIG.TRANSPARENCY
    mainFrame.BorderSizePixel = 0
    mainFrame.ZIndex = 10
    mainFrame.Parent = screenGui
    
    -- Modern corner styling
    local mainCorner = Instance.new("UICorner")
    mainCorner.CornerRadius = UDim.new(0, 20)
    mainCorner.Parent = mainFrame
    
    -- Animated gradient background
    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, theme.primary),
        ColorSequenceKeypoint.new(0.5, theme.secondary),
        ColorSequenceKeypoint.new(1, theme.primary)
    }
    gradient.Rotation = 45
    gradient.Parent = mainFrame
    
    -- Animate gradient
    if CONFIG.ANIMATIONS then
        spawn(function()
            while mainFrame.Parent do
                for i = 0, 360, 2 do
                    if mainFrame.Parent then
                        gradient.Rotation = i
                        wait(0.1)
                    else
                        break
                    end
                end
            end
        end)
    end
    
    -- Glowing border effect
    local stroke = Instance.new("UIStroke")
    stroke.Color = theme.accent
    stroke.Thickness = 3
    stroke.Transparency = 0.3
    stroke.Parent = mainFrame
    
    -- Animate border glow
    if CONFIG.ANIMATIONS then
        spawn(function()
            while mainFrame.Parent do
                local tween1 = TweenService:Create(stroke, TweenInfo.new(2, Enum.EasingStyle.Sine), {
                    Transparency = 0.1
                })
                local tween2 = TweenService:Create(stroke, TweenInfo.new(2, Enum.EasingStyle.Sine), {
                    Transparency = 0.7
                })
                tween1:Play()
                tween1.Completed:Wait()
                if mainFrame.Parent then
                    tween2:Play()
                    tween2.Completed:Wait()
                end
            end
        end)
    end
    
    -- Header Section
    local header = Instance.new("Frame")
    header.Name = "Header"
    header.Size = UDim2.new(1, 0, 0, 80)
    header.Position = UDim2.new(0, 0, 0, 0)
    header.BackgroundColor3 = theme.secondary
    header.BackgroundTransparency = 0.2
    header.BorderSizePixel = 0
    header.ZIndex = 11
    header.Parent = mainFrame
    
    local headerCorner = Instance.new("UICorner")
    headerCorner.CornerRadius = UDim.new(0, 20)
    headerCorner.Parent = header
    
    -- Fix header corners
    local headerFix = Instance.new("Frame")
    headerFix.Size = UDim2.new(1, 0, 0, 20)
    headerFix.Position = UDim2.new(0, 0, 1, -20)
    headerFix.BackgroundColor3 = theme.secondary
    headerFix.BackgroundTransparency = 0.2
    headerFix.BorderSizePixel = 0
    headerFix.ZIndex = 11
    headerFix.Parent = header
    
    -- Animated title
    local title = Instance.new("TextLabel")
    title.Name = "Title"
    title.Text = "üêü Fish It! Advanced Webhook ü¶à"
    title.Size = UDim2.new(1, -100, 1, 0)
    title.Position = UDim2.new(0, 20, 0, 0)
    title.BackgroundTransparency = 1
    title.TextColor3 = theme.text
    title.TextScaled = true
    title.Font = Enum.Font.GothamBold
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.ZIndex = 12
    title.Parent = header
    
    -- Version label
    local version = Instance.new("TextLabel")
    version.Text = SCRIPT_VERSION
    version.Size = UDim2.new(0, 80, 0, 20)
    version.Position = UDim2.new(1, -100, 0, 50)
    version.BackgroundTransparency = 1
    version.TextColor3 = theme.accent
    version.TextScaled = true
    version.Font = Enum.Font.Gotham
    version.ZIndex = 12
    version.Parent = header
    
    -- Control buttons
    local closeBtn = Instance.new("TextButton")
    closeBtn.Name = "CloseButton"
    closeBtn.Text = "‚úï"
    closeBtn.Size = UDim2.new(0, 40, 0, 40)
    closeBtn.Position = UDim2.new(1, -50, 0, 20)
    closeBtn.BackgroundColor3 = theme.error
    closeBtn.BorderSizePixel = 0
    closeBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    closeBtn.Font = Enum.Font.GothamBold
    closeBtn.TextScaled = true
    closeBtn.ZIndex = 12
    closeBtn.Parent = header
    
    local closeBtnCorner = Instance.new("UICorner")
    closeBtnCorner.CornerRadius = UDim.new(0, 10)
    closeBtnCorner.Parent = closeBtn
    
    -- Stats Section
    local statsFrame = Instance.new("Frame")
    statsFrame.Name = "StatsFrame"
    statsFrame.Size = UDim2.new(1, -20, 0, 120)
    statsFrame.Position = UDim2.new(0, 10, 0, 90)
    statsFrame.BackgroundColor3 = theme.secondary
    statsFrame.BackgroundTransparency = 0.3
    statsFrame.BorderSizePixel = 0
    statsFrame.ZIndex = 11
    statsFrame.Parent = mainFrame
    
    local statsCorner = Instance.new("UICorner")
    statsCorner.CornerRadius = UDim.new(0, 15)
    statsCorner.Parent = statsFrame
    
    -- Stats grid
    local statsGrid = Instance.new("UIGridLayout")
    statsGrid.CellSize = UDim2.new(0.5, -10, 0, 25)
    statsGrid.CellPadding = UDim2.new(0, 5, 0, 5)
    statsGrid.SortOrder = Enum.SortOrder.LayoutOrder
    statsGrid.Parent = statsFrame
    
    -- Create stat labels
    local function createStatLabel(text, value, order)
        local statLabel = Instance.new("TextLabel")
        statLabel.Text = string.format("%s: %s", text, value)
        statLabel.BackgroundTransparency = 1
        statLabel.TextColor3 = theme.text
        statLabel.TextScaled = true
        statLabel.Font = Enum.Font.Gotham
        statLabel.TextXAlignment = Enum.TextXAlignment.Left
        statLabel.LayoutOrder = order
        statLabel.ZIndex = 12
        statLabel.Parent = statsFrame
        return statLabel
    end
    
    local totalFishLabel = createStatLabel("üêü Total Fish", STATS.totalCaught, 1)
    local webhooksSentLabel = createStatLabel("üì° Webhooks", STATS.webhooksSent, 2)
    local successRateLabel = createStatLabel("‚úÖ Success Rate", "100%", 3)
    local sessionTimeLabel = createStatLabel("‚è∞ Session", "00:00", 4)
    
    -- Control Section
    local controlFrame = Instance.new("Frame")
    controlFrame.Name = "ControlFrame"
    controlFrame.Size = UDim2.new(1, -20, 0, 300)
    controlFrame.Position = UDim2.new(0, 10, 0, 220)
    controlFrame.BackgroundTransparency = 1
    controlFrame.ZIndex = 11
    controlFrame.Parent = mainFrame
    
    -- Create control buttons
    local function createButton(text, position, size, color, callback)
        local button = Instance.new("TextButton")
        button.Text = text
        button.Size = size
        button.Position = position
        button.BackgroundColor3 = color
        button.BorderSizePixel = 0
        button.TextColor3 = Color3.fromRGB(255, 255, 255)
        button.Font = Enum.Font.GothamBold
        button.TextScaled = true
        button.ZIndex = 12
        button.Parent = controlFrame
        
        local buttonCorner = Instance.new("UICorner")
        buttonCorner.CornerRadius = UDim.new(0, 12)
        buttonCorner.Parent = button
        
        -- Hover effect
        button.MouseEnter:Connect(function()
            local tween = TweenService:Create(button, TweenInfo.new(0.2), {
                Size = UDim2.new(size.X.Scale, size.X.Offset + 5, size.Y.Scale, size.Y.Offset + 2)
            })
            tween:Play()
        end)
        
        button.MouseLeave:Connect(function()
            local tween = TweenService:Create(button, TweenInfo.new(0.2), {
                Size = size
            })
            tween:Play()
        end)
        
        button.MouseButton1Click:Connect(function()
            playSound("click")
            createParticleEffect(button, color, 15)
            if callback then callback() end
        end)
        
        return button
    end
    
    -- Status toggle
    local statusBtn = createButton(
        CONFIG.AUTO_DETECTION and "üü¢ Auto Detection ON" or "üî¥ Auto Detection OFF",
        UDim2.new(0, 0, 0, 0),
        UDim2.new(1, 0, 0, 50),
        CONFIG.AUTO_DETECTION and theme.success or theme.error,
        function()
            CONFIG.AUTO_DETECTION = not CONFIG.AUTO_DETECTION
            statusBtn.Text = CONFIG.AUTO_DETECTION and "üü¢ Auto Detection ON" or "üî¥ Auto Detection OFF"
            statusBtn.BackgroundColor3 = CONFIG.AUTO_DETECTION and theme.success or theme.error
        end
    )
    
    -- Manual webhook button
    createButton(
        "üìù Manual Webhook",
        UDim2.new(0, 0, 0, 60),
        UDim2.new(0.48, 0, 0, 45),
        theme.accent,
        function()
            -- Open manual webhook GUI (simplified for loadstring)
            local fishName = "Test Fish"
            local rarity = "Mythic"
            local fishData = {
                name = fishName,
                rarity = rarity,
                location = "Deep Ocean",
                value = 50000,
                timestamp = getTimestamp()
            }
            sendWebhook(fishData)
        end
    )
    
    -- Test webhook button
    createButton(
        "üß™ Test Webhook",
        UDim2.new(0.52, 0, 0, 60),
        UDim2.new(0.48, 0, 0, 45),
        Color3.fromRGB(100, 150, 255),
        function()
            local testData = {
                name = "Test Megalodon",
                rarity = "Mythic",
                location = "Test Area",
                value = 99999,
                timestamp = getTimestamp()
            }
            sendWebhook(testData)
        end
    )
    
    -- Settings buttons
    createButton(
        "üé® Theme: " .. CONFIG.THEME,
        UDim2.new(0, 0, 0, 115),
        UDim2.new(0.48, 0, 0, 40),
        theme.secondary,
        function()
            local themes = {"Ocean", "Dark", "Neon", "Rainbow"}
            local currentIndex = 1
            for i, themeName in ipairs(themes) do
                if themeName == CONFIG.THEME then
                    currentIndex = i
                    break
                end
            end
            
            currentIndex = currentIndex % #themes + 1
            CONFIG.THEME = themes[currentIndex]
            
            -- Recreate GUI with new theme (simplified for loadstring)
            screenGui:Destroy()
            wait(0.1)
            createMainGUI()
        end
    )
    
    createButton(
        CONFIG.RARE_FISH_ONLY and "ü¶à Rare Only" or "üêü All Fish",
        UDim2.new(0.52, 0, 0, 115),
        UDim2.new(0.48, 0, 0, 40),
        CONFIG.RARE_FISH_ONLY and Color3.fromRGB(255, 165, 0) or Color3.fromRGB(70, 130, 180),
        function()
            CONFIG.RARE_FISH_ONLY = not CONFIG.RARE_FISH_ONLY
        end
    )
    
    -- History button
    createButton(
        "üìú History (" .. #STATS.history .. ")",
        UDim2.new(0, 0, 0, 165),
        UDim2.new(1, 0, 0, 45),
        Color3.fromRGB(120, 120, 200),
        function()
            if #STATS.history == 0 then
                StarterGui:SetCore("SendNotification", {
                    Title = "üìú Empty History";
                    Text = "No webhook history yet!";
                    Duration = 3;
                })
            else
                -- Show simplified history in chat
                print("=== WEBHOOK HISTORY ===")
                for i = 1, math.min(10, #STATS.history) do
                    local entry = STATS.history[i]
                    print(string.format("%d. %s (%s) - %s - %s", 
                        i, 
                        entry.fish, 
                        entry.rarity, 
                        entry.success and "‚úÖ" or "‚ùå",
                        entry.timestamp
                    ))
                end
                print("=======================")
            end
        end
    )
    
    -- URL input (simplified)
    local urlInput = Instance.new("TextBox")
    urlInput.Name = "URLInput"
    urlInput.PlaceholderText = "Paste Discord Webhook URL here..."
    urlInput.Text = CONFIG.WEBHOOK_URL
    urlInput.Size = UDim2.new(1, 0, 0, 40)
    urlInput.Position = UDim2.new(0, 0, 0, 220)
    urlInput.BackgroundColor3 = theme.secondary
    urlInput.BackgroundTransparency = 0.3
    urlInput.BorderSizePixel = 0
    urlInput.TextColor3 = theme.text
    urlInput.TextScaled = true
    urlInput.Font = Enum.Font.Gotham
    urlInput.ZIndex = 12
    urlInput.Parent = controlFrame
    
    local urlCorner = Instance.new("UICorner")
    urlCorner.CornerRadius = UDim.new(0, 10)
    urlCorner.Parent = urlInput
    
    urlInput.FocusLost:Connect(function()
        CONFIG.WEBHOOK_URL = urlInput.Text
        if CONFIG.WEBHOOK_URL ~= "" then
            StarterGui:SetCore("SendNotification", {
                Title = "‚úÖ Webhook Updated";
                Text = "Webhook URL has been saved!";
                Duration = 3;
            })
        end
    end)
    
    -- Update stats periodically
    spawn(function()
        while mainFrame.Parent do
            totalFishLabel.Text = string.format("üêü Total Fish: %d", STATS.totalCaught)
            webhooksSentLabel.Text = string.format("üì° Webhooks: %d", STATS.webhooksSent)
            
            local successRate = STATS.webhooksSent > 0 and 
                math.floor((STATS.webhooksSuccessful / STATS.webhooksSent) * 100) or 100
            successRateLabel.Text = string.format("‚úÖ Success Rate: %d%%", successRate)
            
            local sessionTime = tick() - STATS.sessionStartTime
            local minutes = math.floor(sessionTime / 60)
            local seconds = math.floor(sessionTime % 60)
            sessionTimeLabel.Text = string.format("‚è∞ Session: %02d:%02d", minutes, seconds)
            
            wait(CONFIG.UPDATE_INTERVAL)
        end
    end)
    
    -- Close button functionality
    closeBtn.MouseButton1Click:Connect(function()
        playSound("click")
        local exitTween = TweenService:Create(mainFrame, TweenInfo.new(0.4, Enum.EasingStyle.Back), {
            Size = UDim2.new(0, 0, 0, 0),
            Position = UDim2.new(0.5, 0, 0.5, 0)
        })
        exitTween:Play()
        exitTween.Completed:Connect(function()
            screenGui:Destroy()
        end)
    end)
    
    -- Entrance animation
    if CONFIG.ANIMATIONS then
        mainFrame.Size = UDim2.new(0, 0, 0, 0)
        mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
        
        local entranceTween = TweenService:Create(mainFrame, TweenInfo.new(0.6, Enum.EasingStyle.Back), {
            Size = UDim2.new(0, 450, 0, 600),
            Position = UDim2.new(0.5, -225, 0.5, -300)
        })
        entranceTween:Play()
    end
    
    return screenGui, {
        mainFrame = mainFrame,
        statusBtn = statusBtn,
        urlInput = urlInput
    }
end

-- Fish Detection System
local function setupFishDetection()
    local lastCatchTime = 0
    local lastFishName = ""
    
    -- Method 1: Monitor GUI notifications
    local function monitorGUI()
        playerGui.ChildAdded:Connect(function(gui)
            if not CONFIG.AUTO_DETECTION then return end
            
            -- Look for fish catch notifications
            if gui.Name:find("Notification") or gui.Name:find("Catch") or gui.Name:find("Fish") then
                wait(0.1) -- Wait for GUI to load
                
                for _, descendant in pairs(gui:GetDescendants()) do
                    if descendant:IsA("TextLabel") then
                        local text = descendant.Text:lower()
                        
                        -- Fish catch patterns
                        if text:find("caught") or text:find("fish") or text:find("shark") or text:find("you got") then
                            local fishName = descendant.Text
                            
                            -- Extract fish name from common patterns
                            local patterns = {
                                "caught (.+)!",
                                "you got (.+)!",
                                "fish: (.+)",
                                "(.+) caught!"
                            }
                            
                            for _, pattern in ipairs(patterns) do
                                local match = fishName:match(pattern)
                                if match then
                                    fishName = match
                                    break
                                end
                            end
                            
                            -- Clean up the name
                            fishName = fishName:gsub("^%s+", ""):gsub("%s+$", "")
                            
                            -- Prevent duplicates
                            local currentTime = tick()
                            if fishName == lastFishName and currentTime - lastCatchTime < 5 then
                                return
                            end
                            
                            lastCatchTime = currentTime
                            lastFishName = fishName
                            
                            local rarity = getRarityFromName(fishName)
                            
                            -- Apply filters
                            if CONFIG.RARE_FISH_ONLY then
                                if rarity == "Common" or rarity == "Uncommon" then
                                    return
                                end
                            end
                            
                            if CONFIG.SECRET_FISH_ONLY then
                                if rarity ~= "Secret" and rarity ~= "Mythic" then
                                    return
                                end
                            end
                            
                            -- Update stats
                            STATS.totalCaught = STATS.totalCaught + 1
                            STATS.fishByRarity[rarity] = (STATS.fishByRarity[rarity] or 0) + 1
                            STATS.lastCatch = {
                                fish = fishName,
                                rarity = rarity,
                                timestamp = getTimestamp()
                            }
                            
                            -- Determine value based on rarity
                            local values = {
                                Common = math.random(10, 100),
                                Uncommon = math.random(100, 500),
                                Rare = math.random(500, 2000),
                                Epic = math.random(2000, 10000),
                                Legendary = math.random(10000, 50000),
                                Mythic = math.random(50000, 200000),
                                Secret = math.random(100000, 500000)
                            }
                            
                            local fishData = {
                                name = fishName,
                                rarity = rarity,
                                location = "Auto-Detected",
                                value = values[rarity] or 100,
                                timestamp = getTimestamp()
                            }
                            
                            sendWebhook(fishData)
                            break
                        end
                    end
                end
            end
        end)
    end
    
    -- Method 2: Monitor ReplicatedStorage events
    local function monitorRemoteEvents()
        for _, child in pairs(ReplicatedStorage:GetChildren()) do
            if child:IsA("RemoteEvent") and (
                child.Name:lower():find("fish") or 
                child.Name:lower():find("catch") or 
                child.Name:lower():find("hook")
            ) then
                child.OnClientEvent:Connect(function(...)
                    if not CONFIG.AUTO_DETECTION then return end
                    
                    local args = {...}
                    for _, arg in pairs(args) do
                        if type(arg) == "string" then
                            local fishName = arg
                            local rarity = getRarityFromName(fishName)
                            
                            -- Prevent spam
                            local currentTime = tick()
                            if fishName == lastFishName and currentTime - lastCatchTime < 3 then
                                return
                            end
                            
                            lastCatchTime = currentTime
                            lastFishName = fishName
                            
                            -- Apply filters
                            if CONFIG.RARE_FISH_ONLY and (rarity == "Common" or rarity == "Uncommon") then
                                return
                            end
                            
                            STATS.totalCaught = STATS.totalCaught + 1
                            STATS.fishByRarity[rarity] = (STATS.fishByRarity[rarity] or 0) + 1
                            
                            local fishData = {
                                name = fishName,
                                rarity = rarity,
                                location = "Remote Event",
                                value = math.random(1000, 100000),
                                timestamp = getTimestamp()
                            }
                            
                            sendWebhook(fishData)
                            break
                        end
                    end
                end)
            end
        end
    end
    
    -- Method 3: Monitor inventory changes
    local function monitorInventory()
        local function checkNewItems(container)
            if not container then return end
            
            container.ChildAdded:Connect(function(child)
                if not CONFIG.AUTO_DETECTION then return end
                
                if child:IsA("Tool") or child:IsA("StringValue") or child:IsA("IntValue") then
                    local itemName = child.Name
                    
                    -- Check if it's a fish
                    if itemName:lower():find("fish") or itemName:lower():find("shark") or 
                       getRarityFromName(itemName) ~= "Common" then
                        
                        local rarity = getRarityFromName(itemName)
                        
                        -- Prevent spam
                        local currentTime = tick()
                        if itemName == lastFishName and currentTime - lastCatchTime < 2 then
                            return
                        end
                        
                        lastCatchTime = currentTime
                        lastFishName = itemName
                        
                        -- Apply filters
                        if CONFIG.RARE_FISH_ONLY and (rarity == "Common" or rarity == "Uncommon") then
                            return
                        end
                        
                        STATS.totalCaught = STATS.totalCaught + 1
                        STATS.fishByRarity[rarity] = (STATS.fishByRarity[rarity] or 0) + 1
                        
                        local fishData = {
                            name = itemName,
                            rarity = rarity,
                            location = "Inventory",
                            value = math.random(100, 50000),
                            timestamp = getTimestamp()
                        }
                        
                        sendWebhook(fishData)
                    end
                end
            end)
        end
        
        -- Monitor backpack and character
        if player.Backpack then
            checkNewItems(player.Backpack)
        end
        
        player.CharacterAdded:Connect(function(character)
            checkNewItems(character)
        end)
        
        if player.Character then
            checkNewItems(player.Character)
        end
    end
    
    -- Start all monitoring methods
    monitorGUI()
    monitorRemoteEvents()
    monitorInventory()
end

-- Create floating toggle button
local function createFloatingButton()
    local floatingGui = Instance.new("ScreenGui")
    floatingGui.Name = "FishItFloatingButton"
    floatingGui.Parent = playerGui
    floatingGui.ResetOnSpawn = false
    floatingGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    local floatingBtn = Instance.new("TextButton")
    floatingBtn.Name = "FloatingButton"
    floatingBtn.Text = "üêü"
    floatingBtn.Size = UDim2.new(0, 60, 0, 60)
    floatingBtn.Position = UDim2.new(0, 10, 0.5, -30)
    floatingBtn.BackgroundColor3 = THEMES[CONFIG.THEME].accent
    floatingBtn.BorderSizePixel = 0
    floatingBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    floatingBtn.TextScaled = true
    floatingBtn.Font = Enum.Font.GothamBold
    floatingBtn.ZIndex = 5
    floatingBtn.Parent = floatingGui
    
    local floatingCorner = Instance.new("UICorner")
    floatingCorner.CornerRadius = UDim.new(1, 0)
    floatingCorner.Parent = floatingBtn
    
    local floatingStroke = Instance.new("UIStroke")
    floatingStroke.Color = Color3.fromRGB(255, 255, 255)
    floatingStroke.Thickness = 2
    floatingStroke.Transparency = 0.5
    floatingStroke.Parent = floatingBtn
    
    -- Pulse animation
    if CONFIG.ANIMATIONS then
        spawn(function()
            while floatingBtn.Parent do
                local pulseTween = TweenService:Create(floatingBtn, TweenInfo.new(1, Enum.EasingStyle.Sine), {
                    Size = UDim2.new(0, 65, 0, 65)
                })
                local pulseTween2 = TweenService:Create(floatingBtn, TweenInfo.new(1, Enum.EasingStyle.Sine), {
                    Size = UDim2.new(0, 60, 0, 60)
                })
                pulseTween:Play()
                pulseTween.Completed:Wait()
                if floatingBtn.Parent then
                    pulseTween2:Play()
                    pulseTween2.Completed:Wait()
                end
            end
        end)
    end
    
    floatingBtn.MouseButton1Click:Connect(function()
        playSound("click")
        createParticleEffect(floatingBtn, THEMES[CONFIG.THEME].accent, 20)
        
        if playerGui:FindFirstChild("FishItWebhookSystem") then
            playerGui.FishItWebhookSystem:Destroy()
        else
            createMainGUI()
        end
    end)
    
    return floatingGui
end

-- Initialize everything
local function initialize()
    -- Check if we're in the right game
    local gameId = game.PlaceId
    local gameName = GAME_SUPPORT[gameId] or GAME_SUPPORT["Universal"]
    
    -- Clean up any existing instances
    if playerGui:FindFirstChild("FishItWebhookSystem") then
        playerGui.FishItWebhookSystem:Destroy()
    end
    if playerGui:FindFirstChild("FishItFloatingButton") then
        playerGui.FishItFloatingButton:Destroy()
    end
    
    -- Create main systems
    local floatingGui = createFloatingButton()
    setupFishDetection()
    
    -- Show initial GUI if enabled
    if CONFIG.SHOW_GUI then
        createMainGUI()
    end
    
    -- Welcome notification
    StarterGui:SetCore("SendNotification", {
        Title = "üêü Fish It! Webhook Loaded";
        Text = string.format("%s\n%s", SCRIPT_VERSION, gameName);
        Duration = 5;
    })
    
    -- Console output
    print("üåä ===============================================")
    print("üêü Fish It! Advanced Webhook System")
    print("üåä ===============================================")
    print("üìä Version:", SCRIPT_VERSION)
    print("üéÆ Game:", gameName)
    print("üì± GUI:", CONFIG.SHOW_GUI and "Enabled" or "Disabled")
    print("üîç Auto Detection:", CONFIG.AUTO_DETECTION and "Enabled" or "Disabled")
    print("üì° Webhook:", CONFIG.WEBHOOK_URL ~= "" and "Configured" or "Not Set")
    print("üé® Theme:", CONFIG.THEME)
    print("üåä ===============================================")
    
    -- Instructions
    warn("üîß SETUP INSTRUCTIONS:")
    warn("1. Click the floating üêü button to open GUI")
    warn("2. Paste your Discord Webhook URL in the input field")
    warn("3. Configure your settings (theme, filters, etc.)")
    warn("4. Start fishing and enjoy automatic webhooks!")
    warn("")
    warn("üí° TIPS:")
    warn("- Use 'Rare Only' filter for valuable fish notifications")
    warn("- Check webhook history to see all catches")
    warn("- Test webhook button verifies your URL works")
    warn("- Multiple detection methods ensure no missed catches")
    warn("")
    warn("üöÄ Ready to catch some fish! Good luck! üé£")
    
    playSound("success")
end

-- Auto-update system (optional)
spawn(function()
    wait(5) -- Wait for initial load
    
    -- Check for updates periodically
    while true do
        wait(300) -- Check every 5 minutes
        
        if CONFIG.AUTO_CLEANUP and STATS.totalCaught > 0 then
            -- Clean up old history entries
            while #STATS.history > CONFIG.MAX_HISTORY do
                table.remove(STATS.history, #STATS.history)
            end
        end
    end
end)

-- Error handling wrapper
local function safeInitialize()
    local success, error = pcall(initialize)
    
    if not success then
        warn("‚ùå Fish It! Webhook failed to load:", error)
        StarterGui:SetCore("SendNotification", {
            Title = "‚ùå Script Error";
            Text = "Failed to load Fish It! Webhook. Check console for details.";
            Duration = 10;
        })
    end
end

-- Start the script
safeInitialize()

-- Return module for advanced users
return {
    version = SCRIPT_VERSION,
    config = CONFIG,
    stats = STATS,
    sendWebhook = sendWebhook,
    themes = THEMES,
    fishDatabase = FISH_DATABASE
}